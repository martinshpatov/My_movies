{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041C\\u0430\\u0440\\u0442\\u0438\\u043D\\\\Desktop\\\\VisualStudioCode\\\\REACT JS\\\\demo_project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport './App.css';\nimport SearchIcon from './search.svg';\nimport { Contact } from './components/Contact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://www.omdbapi.com?apikey=95e0781';\nconst movie1 = {\n  \"Title\": \"Spiderman and Grandma\",\n  \"Year\": \"2009\",\n  \"imdbID\": \"tt1433184\",\n  \"Type\": \"movie\",\n  \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMjE3Mzg0MjAxMl5BMl5BanBnXkFtZTcwNjIyODg5Mg@@._V1_SX300.jpg\"\n};\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n  };\n  useEffect(() => {\n    searchMovies('Spiderman');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieLand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search for movies\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => searchMovies(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No movies found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"nmGuk4IsUa4415BYG0nQ+6CoHIo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","MovieCard","SearchIcon","Contact","jsxDEV","_jsxDEV","API_URL","movie1","App","_s","movies","setMovies","searchTerm","setSearchTerm","searchMovies","title","response","fetch","data","json","Search","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","src","alt","onClick","length","map","movie","_c","$RefreshReg$"],"sources":["C:/Users/Мартин/Desktop/VisualStudioCode/REACT JS/demo_project/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport './App.css'\r\nimport SearchIcon from './search.svg'\r\n\r\n import { Contact } from './components/Contact';\r\n\r\n\r\nconst API_URL = 'http://www.omdbapi.com?apikey=95e0781'\r\n\r\nconst movie1 = {\r\n    \"Title\": \"Spiderman and Grandma\",\r\n    \"Year\": \"2009\",\r\n    \"imdbID\": \"tt1433184\",\r\n    \"Type\": \"movie\",\r\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMjE3Mzg0MjAxMl5BMl5BanBnXkFtZTcwNjIyODg5Mg@@._V1_SX300.jpg\"\r\n}\r\n\r\nconst App = () => {\r\n    const [movies, setMovies] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const searchMovies = async (title) => {\r\n        const response = await fetch(`${API_URL}&s=${title}`);\r\n        const data = await response.json();\r\n\r\n        setMovies(data.Search);\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchMovies('Spiderman')\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>MovieLand</h1>\r\n            <div className=\"search\">\r\n           <input\r\n                    placeholder=\"Search for movies\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n           <img\r\n                    src={SearchIcon}\r\n                    alt=\"search\"\r\n                    onClick={() => searchMovies(searchTerm)}\r\n                />\r\n       </div>\r\n            {\r\n                movies?.length > 0\r\n                    ? (\r\n                   <div className=\"container\">\r\n                    {movies.map((movie) => (\r\n                        <MovieCard movie={movie} />\r\n                    ))}\r\n                   </div>\r\n                    ) : (\r\n                   <div className=\"empty\">\r\n                       <h2>No movies found!</h2>\r\n\r\n                 </div>\r\n                    )\r\n\r\n}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}